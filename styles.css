.main {
  display: flex;
  justify-content: flex-start; /* this will align your items to the left */
  align-items: center;
  height: 100vh;
}
body {
  background-image: linear-gradient(rgba(0, 0, 0, 0.7), rgba(0, 0, 0, 0.7)), url('resources/bgd.png');
  background-size: cover;
  background-repeat: repeat;
  background-position: center center;
  background-attachment: fixed;

  margin: 0;
  padding: 0;
  font-family: monospace;
  font-weight: 400;
  background-color: #14342B;
  color: white;

  overflow-x: hidden;
  overflow-y: hidden;
}

header {
  display: flex;
  font-size: 27px;
  justify-content: center;
  align-items: center;
  background-color: #141204;
  padding: 20px;
  color:#fff;
  box-shadow: 0 10px 10px -10px rgba(0, 0, 0, 0.5);
  position: fixed;
  top: 0;
  width: 100%;
}

nav {
  display: flex;
  justify-content: center;
  transform: translateY(50px);
}

.github-icon {
  color: #E6E6EF;
  text-decoration: none;
}

.github-icon i {
  font-size: 70px;
}

nav h1 {
  color: #FFF;
  margin: 0;
}

.nav-links {
  display: flex;
  gap: 40px;
}

.nav-links a {
  color: #E6E6EF;
  text-decoration: none;
  position: relative;
}

.nav-links a::after {
  content: "";
  position: absolute;
  width: 0;
  height: 2px;
  background-color: #E6E6EF;
  bottom: -5px;
  left: 0;
  transition: width 0.3s;
}

.nav-links a:hover::after {
  width: 100%;
}

main {
  display: flex;
  justify-content: center;
  align-items: center;
  height: calc(100vh - 60px);
}

.initial-section {
  display:flex;
  align-items: center;
  font-size:27px;
  color: #E6E6EF;
}

.profile-image {
  width: 180px;
  height: 180px;
  border-radius: 50%;
  box-shadow: 0px 2px 5px rgba(0, 0, 0, 0.15);
}

.profile-info {
  color: #e6e6ef;
  font-size:50px;
  transform: translateX(5%);
  top: 25%;
}

.icon-container {
  pointer-events: auto;
  margin-left: auto;
  margin-right: auto;
  z-index: 100;
  display: flex;
  position: relative;
  justify-content: center;
  align-items: center;
  gap: 30px;
  color:#E6E6EF;
}

.icon-link {
  z-index: 101;
  color: #FFF;
  text-decoration: none;
  position: relative;
}

.error-section {
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
    height: calc(100vh - 60px);
}

.error-section h1 {
    font-size: 48px;
}

.error-section p {
    font-size: 24px;
}

.home-icon {
    color: #FFF;
    text-decoration: none;
}

.home-icon i {
    font-size: 35px;
}

.meinfo {
  transform: translateY(-70%);
  font-size:40px;
}

.img-container{
  transform:scale(0.5);
  border-radius: 50%;
  box-shadow: 0px 0px 10px rgba(0,0,0,0.1);
  background: url("resources/mypfp.png") no-repeat center bottom / cover;
  overflow: hidden;
  transition: all 0.25s ease-in-out;
}

.img-container:hover{
  transform: scale(0.51);
}



.rotate-circle {
  position: absolute;
  width: 295px;
  height: 295px;
  border: 4px dashed white;
  border-spacing: 100px;
  border-radius: 50%;
  top: calc(50% - 25px);
  left: calc(76.7%);
  animation: rotate 25s linear infinite; /* Adjust animation duration and properties */
}

@keyframes rotate {
  0% {
    transform: translateX(-50%) translateY(calc(-50% + 25px)) rotate(0deg);
  }
  100% {
    transform: translateX(-50%) translateY(calc(-50% + 25px)) rotate(360deg);
  }
}

.hover-container {
    display: inline-block;
    position: relative;
}

.hover-box {
  font-size: 35px;
    position: relative;
    padding: 10px;
    margin: 10px;
    color: #fff;
    border: 2px solid #fff;
    box-shadow: 0px 2px 5px rgba(0, 0, 0, 0.15);
    transition: all 0.3s ease-in-out;
    z-index: 2;
}

.background-box {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background-color: #fff;
    border: 2px solid #fff;
    transition: all 0.3s ease-in-out;
    opacity: 0;
    z-index: 1;
}

.hover-box:hover {
    transform: translate(-1px, -1px); /* move the box towards top left by 5 pixels */
    box-shadow: 0px 5px 15px rgba(0, 0, 0, 0.3);
}

.hover-container:hover .background-box {
    opacity: 1;
    transform: translate(5px, 5px);
}


.float-animation {
  animation: floating 5s infinite;
  animation-timing-function: ease-in-out;
}

.animateText {
  transform:translateY(+70%);
}

@keyframes floating {
    0%, 100% {
        transform: translateY(0);
    }
    50% {
        transform: translateY(-0.75%);
    }
}
